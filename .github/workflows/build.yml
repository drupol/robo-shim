# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
    - pull_request
    - push

name: "Unit tests"

jobs:
    dependencies:
        name: Build dependencies
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.version.outputs.version }}

        steps:
            - name: Check out source files
              uses: actions/checkout@v2

            - name: Create global variables
              id: version
              run: echo "::set-output name=version::$(git rev-parse --short HEAD)"

    run:
        name: "CI"
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            matrix:
                operating-system: [ubuntu-latest]
                php-versions: ['7.4']
        needs: [dependencies]

        steps:
            - name: Set git to use LF
              run: |
                  git config --global core.autocrlf false
                  git config --global core.eol lf

            - name: Checkout
              uses: actions/checkout@v2.3.4
              with:
                  fetch-depth: 1

            - name: Install PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring

            - name: Get Composer Cache Directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2.1.4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --no-progress --prefer-dist --optimize-autoloader

            - name: Build phar
              run: composer compile

            - name: Upload build assets
              uses: actions/upload-artifact@v2
              with:
                name: robo.phar
                path: ./robo.phar

            - name: Upload build assets checksum
              uses: actions/upload-artifact@v2
              with:
                name: robo.phar.sha1sum
                path: ./robo.phar.sha1sum

    release:
        name: "Create tag/pre-release"
        runs-on: ubuntu-latest
        needs: [dependencies, run]
        outputs:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
        steps:
        - name: Create pre-release (${{ needs.dependencies.outputs.version }})
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: v${{ github.run_number }}-${{ needs.dependencies.outputs.version }}
            release_name: Version ${{ github.run_number }} (${{ needs.dependencies.outputs.version }})
            draft: true
            prerelease: true

    assets:
        name: Upload release assets
        runs-on: ubuntu-latest
        needs: [run, release]

        steps:
        - name: Download build assets
          uses: actions/download-artifact@v2
          with:
            name: robo.phar

        - name: Download build assets
          uses: actions/download-artifact@v2
          with:
            name: robo.phar.sha1sum

        - name: Upload release assets
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.release.outputs.upload_url }}
            asset_path: ./robo.phar
            asset_name: robo.phar
            asset_content_type: application/octet-stream

        - name: Upload release assets
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.release.outputs.upload_url }}
            asset_path: ./robo.phar.sha1sum
            asset_name: robo.phar.sha1sum
            asset_content_type: application/text
